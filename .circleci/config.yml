version: 2
jobs:
  build: # runs not using Workflows must have a `build` job as entry point
    branches:
      only:
        - master
    working_directory: ~/fpl_next # directory where steps will run
    docker: # run the steps with Docker
      - image: circleci/node:10.16.0
    steps:
      - checkout
      - run:
          name: Setup VirtualEnv
          command: |
            echo 'export TAG=0.1.${CIRCLE_BUILD_NUM}' >> $BASH_ENV
            echo 'export IMAGE_NAME=fpl_next' >> $BASH_ENV
      - run:
          name: update-npm
          command: "sudo npm install -g npm@latest"
      - restore_cache: # restore the dependency cache
          # https://circleci.com/docs/2.0/caching/
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: install-npm-wee
          command: npm install
      - save_cache: # save the dependency cache
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - ./node_modules
      - run:
          name: test
          command: npm test
      # - run: # run coverage report
      # name: code-coverage
      # command: './node_modules/.bin/nyc report --reporter=text-lcov'
      - store_artifacts: # save test results as as artifact
          # https://circleci.com/docs/2.0/artifacts/
          path: test-results.xml
          prefix: tests
      # - store_artifacts:
      #    path: coverage
      #    prefix: coverage
      - store_test_results: # https://circleci.com/docs/2.0/collect-test-data/
          path: test-results.xml

      # DEPLOY
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Build and push Docker image
          command: |
            docker build --build-arg BUILD_API_VAR=${API} -t cocymsc1986/$IMAGE_NAME:$TAG .
            echo $DOCKER_PWD | docker login -u $DOCKER_LOGIN --password-stdin
            docker push cocymsc1986/$IMAGE_NAME:$TAG
      - add_ssh_keys:
          fingerprints:
            - "9e:59:38:ee:b6:ff:f7:a5:b1:95:3f:f1:9a:6c:0d:a0"
      - run:
          name: Deploy app to Digital Ocean Server via Docker
          command: |
            ssh -o StrictHostKeyChecking=no cocymsc@178.62.14.68 "/bin/bash ./../../var/www/fantasyprem.co.uk/deploy.sh cocymsc1986/$IMAGE_NAME:$TAG"
